name: Build api

on:
  push:
    tags:
      - "*"
    branches:
      - "main"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build binary and push (api)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { docker: linux/amd64, fancy: amd64 }
          - { docker: linux/arm64, fancy: arm64 }
    steps:
      - name: Prepare environment
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "VERSION=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
          fi
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install cross (for aarch64 builds)
        if: matrix.platform.fancy == 'arm64'
        run: cargo install cross
      - name: Build binary (aarch64)
        if: matrix.platform.fancy == 'arm64'
        run: cross build --target aarch64-unknown-linux-gnu --release
      - name: Copy binary (aarch64)
        if: matrix.platform.fancy == 'arm64'
        run: mv target/aarch64-unknown-linux-gnu/release/api api/api
      - name: Build binary (amd64)
        if: matrix.platform.fancy == 'amd64'
        run: cargo build --release
      - name: Copy binary (amd64)
        if: matrix.platform.fancy == 'amd64'
        run: mv target/release/api api/api
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to repository
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: ${{ matrix.platform.docker }}
          context: api/
          file: api/Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ matrix.platform.fancy }}
